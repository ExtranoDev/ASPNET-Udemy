@model IEnumerable<PersonResponse>
@{
    ViewBag.Title = "Persons";
}

<h1>Persons</h1>

<a href="~/persons/create">Create Person</a>

<form action="~/persons/index" method="get">
    <div class="box flex">
        <div class="flex-1">
            <select class="form-input" name="searchBy">
                @foreach (var field in ViewBag.SearchFields)
                {
                    @if (field.Key == ViewBag.CurrentSearchBy)
                    {
                        <option value="@field.Key" selected="selected">@field.Value</option>
                    }
                    else
                    {
                        <option value="@field.Key">@field.Value</option>
                    }
                }
                @* Eg: searchBy=PersonName$searchString=abc *@
            </select>
        </div>

        <div class="flex-1">
            <input type="search" id="search" class="form-input" placeholder="Search" name="searchString" value="@ViewBag.CurrentSearchString" />
        </div>

        <div class="flex-1">
            <button class="button button-blue-back">Search</button>
            <a href="~/persons/index" class="link-hover">Clear all</a>
        </div>
    </div>
</form>

<table class="table w-100 mt">
    <thead>
        <tr>
            @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData) {
                {"ColumnName", nameof(PersonResponse.PersonName)},
                {"DisplayName", "Person Name"},                  
            })

            @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData) {
                {"ColumnName", nameof(PersonResponse.Email)},
                {"DisplayName", "Email"},                  
            })

            @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData) {
                {"ColumnName", nameof(PersonResponse.DateOfBirth)},
                {"DisplayName", "Date Of Birth"},                  
            })

            @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData) {
                {"ColumnName", nameof(PersonResponse.Age)},
                {"DisplayName", "Age"},                  
            })

            @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData) {
                {"ColumnName", nameof(PersonResponse.Gender)},
                {"DisplayName", "Gender"},                  
            })

            @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData) {
                {"ColumnName", nameof(PersonResponse.Country)},
                {"DisplayName", "Country"},                  
            })

            @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData) {
                {"ColumnName", nameof(PersonResponse.Address)},
                {"DisplayName", "Address"},                  
            })

            @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData) {
                {"ColumnName", nameof(PersonResponse.RecieveNewsLetters)},
                {"DisplayName", "Recieve News Letters"},                  
            })          
        </tr>
    </thead>
    <tbody>
        @foreach (PersonResponse person in Model)
        {
            <tr>
                <td>
                    @person.PersonName
                </td>
                <td>@person.Email</td>
                <td>@person.DateOfBirth?.ToString("dd MMM yyyy")</td>
                <td>@person.Age</td>
                <td>@person.Gender</td>
                <td>@person.Country</td>
                <td>@person.Address</td>
                <td>@person.RecieveNewsLetters</td>
            </tr>
        }
    </tbody>
</table>